useSelector: to get something from a redux-store.
useDispatch: to useDispatch something / send information.

slice up scripts so they only are dependent on what you going to use it for. 
(decouple)

use a main store.js to combine them into a store where we can 'dispatch' and 'select' when needed.
 
combine the slices/reducers and give them a key.
///
const rootReducer = combineReducers({
    account: accountReducer,
    customer: customerReducer
})
const store = createStore(rootReducer);

export default store;
///

useSelector (get information)
///
  const customer = useSelector(store => store.customer.fullName) //get fullName
    const {loan: currentLoan, loanPurpose: currentLoanPurpose, balance} = useSelector(store => store.account);
    //deconstruct the account reducer's values.
///

useDispatch (send information)
///
  const dispatch = useDispatch(); //init
    dispatch(deposit(depositAmount)); //use

   export const deposit = (amount) => {
    return { type: 'account/deposit', payload: amount } //action
}
///

MIDDLEWARE:
Perfect for async code,
API Calls, timers, logging etc..
The place for side effects.

Reason: reducers needs to be pure functions, no async operations.

Road: Component > dispatch > MIDDLEWARE > store